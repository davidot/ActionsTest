name: compile-and-run
on: [push, pull_request]

jobs:
  build-compile-test:
    name: Build & Run on ${{ matrix.config.os }} with ${{ matrix.config.compiler }} (${{ matrix.build_type }} build)
    strategy:
      fail-fast: false # temporary TODO FIXME: remove this
      matrix:
        build_type: [Debug, Release]
        config:
          - {
              compiler: g++-10,
              os: ubuntu-20.04,
              always: true,
              mac: false
            }
          - {
              compiler: clang++-10,
              os: ubuntu-20.04,
              always: false,
              mac: false
            }
          - {
              compiler: cl.exe,
              os: windows-2019,
              always: false,
              mac: false
            }
          - {
              compiler: clang++,
              os: macos-latest,
              always: false,
              mac: true
            }
          - {
              compiler: g++-10,
              os: macos-latest,
              always: false,
              mac: true
            }
        runall:
          - ${{ contains('refs/heads/main refs/heads/develop', github.ref) || contains(github.event.head_commit.message, '.full-ci') }}
        runmac: ${{ contains(github.event.head_commit.message, '.mac-ci') }}
        exclude:
          - {config: {always: false}, runall: false}
        include:
          - {config: {mac: true}, runmac: true}
    env:
      build_folder_location: build
    runs-on: ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies (Ubuntu)
        if: startsWith(matrix.config.os, 'ubuntu')
        run: sudo apt-get install ninja-build

      - name: Install Dependencies (Windows)
        if: startsWith(matrix.config.os, 'windows')
        run: |
          pip install ninja

      - name: Install Dependencies (macOS)
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install ninja

      - name: Configure MSVC console (Windows)
        if:  startsWith(matrix.config.os, 'windows')
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup build
        run: |
            mkdir -p ${{ env.build_folder_location }}
            cd ${{ env.build_folder_location }}
            cmake .. -G Ninja -DCMAKE_CXX_COMPILER="${{ matrix.config.compiler }}" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
      - name: Build
        run: cmake --build ${{ env.build_folder_location }}
      - name: Run
        run: ${{ env.build_folder_location }}/ActionsTest


