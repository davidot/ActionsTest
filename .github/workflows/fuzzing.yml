name: fuzz
on:
  push:
    paths-ignore:
      - '**/*.md'
  schedule:
    - 25 */12 * * *

jobs:
  build-compile-test:
    name: Fuzz all targets
    env:
      build_folder_location: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        if: startsWith(matrix.config.os, 'ubuntu')
        run: sudo apt-get install ninja-build

      - name: Setup build
        run: |
          mkdir -p ${{ env.build_folder_location }}
          cd ${{ env.build_folder_location }}
          cmake .. -G Ninja -DCMAKE_CXX_COMPILER="clang++-10" -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build ${{ env.build_folder_location }} --target FENFuzzer
      - name: Run fuzzer
        run: |
          cd ${{ env.build_folder_location }}
          cd fuzzer
          mkdir FENFuzzer_corpus
          echo "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w - - 0 1" > FENFuzzer_corpus/standard
          ./FENFuzzer -max_len 128 -max_total_time 90 ${fuzzer_source}_corpus
      - name: Output corpus
        run: |
          cd ${{ env.build_folder_location }}
          cd fuzzer
          cd FENFuzzer_corpus
          for filename in $(ls .); do     echo $filename && cat $filename && echo ''; done;
      - name: Archive any crashes as an artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: crashes
          path: |
            ${{ env.build_folder_location }}/fuzzer/crash-*
            ${{ env.build_folder_location }}/fuzzer/leak-*
            ${{ env.build_folder_location }}/fuzzer/timeout-*
          if-no-files-found: ignore

